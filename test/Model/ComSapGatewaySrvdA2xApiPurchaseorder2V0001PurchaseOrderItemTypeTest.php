<?php
/**
 * ComSapGatewaySrvdA2xApiPurchaseorder2V0001PurchaseOrderItemTypeTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  BeLenka\SAP\PurchaseOrder
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Purchase Order
 *
 * This service enables you to create purchase orders through an API call from a source system outside SAP S/4HANA Cloud. Furthermore, the service enables you to read, update or delete existing purchase orders from the SAP S/4HANA Cloud system. The service is based on the OData protocol.
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace BeLenka\SAP\PurchaseOrder\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * ComSapGatewaySrvdA2xApiPurchaseorder2V0001PurchaseOrderItemTypeTest Class Doc Comment
 *
 * @category    Class
 * @description ComSapGatewaySrvdA2xApiPurchaseorder2V0001PurchaseOrderItemType
 * @package     BeLenka\SAP\PurchaseOrder
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class ComSapGatewaySrvdA2xApiPurchaseorder2V0001PurchaseOrderItemTypeTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "ComSapGatewaySrvdA2xApiPurchaseorder2V0001PurchaseOrderItemType"
     */
    public function testComSapGatewaySrvdA2xApiPurchaseorder2V0001PurchaseOrderItemType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "purchase_order"
     */
    public function testPropertyPurchaseOrder()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "purchase_order_item"
     */
    public function testPropertyPurchaseOrderItem()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "purchase_order_category"
     */
    public function testPropertyPurchaseOrderCategory()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "document_currency"
     */
    public function testPropertyDocumentCurrency()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "purchasing_document_deletion_code"
     */
    public function testPropertyPurchasingDocumentDeletionCode()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "material_group"
     */
    public function testPropertyMaterialGroup()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "material"
     */
    public function testPropertyMaterial()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "material_type"
     */
    public function testPropertyMaterialType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "supplier_material_number"
     */
    public function testPropertySupplierMaterialNumber()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "supplier_subrange"
     */
    public function testPropertySupplierSubrange()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "manufacturer_part_nmbr"
     */
    public function testPropertyManufacturerPartNmbr()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "manufacturer"
     */
    public function testPropertyManufacturer()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "manufacturer_material"
     */
    public function testPropertyManufacturerMaterial()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "purchase_order_item_text"
     */
    public function testPropertyPurchaseOrderItemText()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "product_type_code"
     */
    public function testPropertyProductTypeCode()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "company_code"
     */
    public function testPropertyCompanyCode()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "plant"
     */
    public function testPropertyPlant()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "manual_delivery_address_id"
     */
    public function testPropertyManualDeliveryAddressId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "reference_delivery_address_id"
     */
    public function testPropertyReferenceDeliveryAddressId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "customer"
     */
    public function testPropertyCustomer()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "subcontractor"
     */
    public function testPropertySubcontractor()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "supplier_is_subcontractor"
     */
    public function testPropertySupplierIsSubcontractor()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "cross_plant_configurable_product"
     */
    public function testPropertyCrossPlantConfigurableProduct()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "article_category"
     */
    public function testPropertyArticleCategory()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "plnd_order_replnmt_elmnt_type"
     */
    public function testPropertyPlndOrderReplnmtElmntType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "product_purchase_points_qty_unit"
     */
    public function testPropertyProductPurchasePointsQtyUnit()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "product_purchase_points_qty"
     */
    public function testPropertyProductPurchasePointsQty()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "storage_location"
     */
    public function testPropertyStorageLocation()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "purchase_order_quantity_unit"
     */
    public function testPropertyPurchaseOrderQuantityUnit()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "order_item_qty_to_base_qty_nmrtr"
     */
    public function testPropertyOrderItemQtyToBaseQtyNmrtr()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "order_item_qty_to_base_qty_dnmntr"
     */
    public function testPropertyOrderItemQtyToBaseQtyDnmntr()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "net_price_quantity"
     */
    public function testPropertyNetPriceQuantity()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_completely_delivered"
     */
    public function testPropertyIsCompletelyDelivered()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_finally_invoiced"
     */
    public function testPropertyIsFinallyInvoiced()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "goods_receipt_is_expected"
     */
    public function testPropertyGoodsReceiptIsExpected()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "invoice_is_expected"
     */
    public function testPropertyInvoiceIsExpected()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_order_ackn_rqd"
     */
    public function testPropertyIsOrderAcknRqd()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "invoice_is_goods_receipt_based"
     */
    public function testPropertyInvoiceIsGoodsReceiptBased()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "purchase_contract"
     */
    public function testPropertyPurchaseContract()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "purchase_contract_item"
     */
    public function testPropertyPurchaseContractItem()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "purchase_requisition"
     */
    public function testPropertyPurchaseRequisition()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "purchase_requisition_item"
     */
    public function testPropertyPurchaseRequisitionItem()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "requirement_tracking"
     */
    public function testPropertyRequirementTracking()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "supplier_quotation"
     */
    public function testPropertySupplierQuotation()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "supplier_quotation_item"
     */
    public function testPropertySupplierQuotationItem()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "evald_rcpt_settlmt_is_allowed"
     */
    public function testPropertyEvaldRcptSettlmtIsAllowed()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "unlimited_overdelivery_is_allowed"
     */
    public function testPropertyUnlimitedOverdeliveryIsAllowed()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "overdeliv_tolrtd_lmt_ratio_in_pct"
     */
    public function testPropertyOverdelivTolrtdLmtRatioInPct()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "underdeliv_tolrtd_lmt_ratio_in_pct"
     */
    public function testPropertyUnderdelivTolrtdLmtRatioInPct()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "requisitioner_name"
     */
    public function testPropertyRequisitionerName()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "planned_delivery_duration_in_days"
     */
    public function testPropertyPlannedDeliveryDurationInDays()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "goods_receipt_duration_in_days"
     */
    public function testPropertyGoodsReceiptDurationInDays()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "partial_delivery_is_allowed"
     */
    public function testPropertyPartialDeliveryIsAllowed()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "consumption_posting"
     */
    public function testPropertyConsumptionPosting()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "service_performer"
     */
    public function testPropertyServicePerformer()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "service_package"
     */
    public function testPropertyServicePackage()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "base_unit"
     */
    public function testPropertyBaseUnit()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "purchase_order_item_category"
     */
    public function testPropertyPurchaseOrderItemCategory()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "profit_center"
     */
    public function testPropertyProfitCenter()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "order_price_unit"
     */
    public function testPropertyOrderPriceUnit()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "item_volume_unit"
     */
    public function testPropertyItemVolumeUnit()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "item_weight_unit"
     */
    public function testPropertyItemWeightUnit()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "multiple_acct_assgmt_distribution"
     */
    public function testPropertyMultipleAcctAssgmtDistribution()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "partial_invoice_distribution"
     */
    public function testPropertyPartialInvoiceDistribution()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "pricing_date_control"
     */
    public function testPropertyPricingDateControl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_statistical_item"
     */
    public function testPropertyIsStatisticalItem()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "purchasing_parent_item"
     */
    public function testPropertyPurchasingParentItem()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "goods_receipt_latest_creation_date"
     */
    public function testPropertyGoodsReceiptLatestCreationDate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_returns_item"
     */
    public function testPropertyIsReturnsItem()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "purchasing_order_reason"
     */
    public function testPropertyPurchasingOrderReason()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "incoterms_classification"
     */
    public function testPropertyIncotermsClassification()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "incoterms_transfer_location"
     */
    public function testPropertyIncotermsTransferLocation()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "incoterms_location1"
     */
    public function testPropertyIncotermsLocation1()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "incoterms_location2"
     */
    public function testPropertyIncotermsLocation2()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "prior_supplier"
     */
    public function testPropertyPriorSupplier()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "international_article_number"
     */
    public function testPropertyInternationalArticleNumber()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "intrastat_service_code"
     */
    public function testPropertyIntrastatServiceCode()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "commodity_code"
     */
    public function testPropertyCommodityCode()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "material_freight_group"
     */
    public function testPropertyMaterialFreightGroup()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "discount_in_kind_eligibility"
     */
    public function testPropertyDiscountInKindEligibility()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "purg_item_is_blocked_for_delivery"
     */
    public function testPropertyPurgItemIsBlockedForDelivery()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "supplier_confirmation_control_key"
     */
    public function testPropertySupplierConfirmationControlKey()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "purg_doc_order_ackn_number"
     */
    public function testPropertyPurgDocOrderAcknNumber()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "price_is_to_be_printed"
     */
    public function testPropertyPriceIsToBePrinted()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "account_assignment_category"
     */
    public function testPropertyAccountAssignmentCategory()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "purchasing_info_record"
     */
    public function testPropertyPurchasingInfoRecord()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "net_amount"
     */
    public function testPropertyNetAmount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "gross_amount"
     */
    public function testPropertyGrossAmount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "effective_amount"
     */
    public function testPropertyEffectiveAmount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "subtotal1_amount"
     */
    public function testPropertySubtotal1Amount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "subtotal2_amount"
     */
    public function testPropertySubtotal2Amount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "subtotal3_amount"
     */
    public function testPropertySubtotal3Amount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "subtotal4_amount"
     */
    public function testPropertySubtotal4Amount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "subtotal5_amount"
     */
    public function testPropertySubtotal5Amount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "subtotal6_amount"
     */
    public function testPropertySubtotal6Amount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "order_quantity"
     */
    public function testPropertyOrderQuantity()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "net_price_amount"
     */
    public function testPropertyNetPriceAmount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "item_volume"
     */
    public function testPropertyItemVolume()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "item_gross_weight"
     */
    public function testPropertyItemGrossWeight()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "item_net_weight"
     */
    public function testPropertyItemNetWeight()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "order_price_unit_to_order_unit_nmrtr"
     */
    public function testPropertyOrderPriceUnitToOrderUnitNmrtr()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ord_price_unit_to_order_unit_dnmntr"
     */
    public function testPropertyOrdPriceUnitToOrderUnitDnmntr()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "goods_receipt_is_non_valuated"
     */
    public function testPropertyGoodsReceiptIsNonValuated()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_to_be_accepted_at_origin"
     */
    public function testPropertyIsToBeAcceptedAtOrigin()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "tax_code"
     */
    public function testPropertyTaxCode()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "tax_jurisdiction"
     */
    public function testPropertyTaxJurisdiction()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "tax_country"
     */
    public function testPropertyTaxCountry()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "tax_determination_date"
     */
    public function testPropertyTaxDeterminationDate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "shipping_instruction"
     */
    public function testPropertyShippingInstruction()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "non_deductible_input_tax_amount"
     */
    public function testPropertyNonDeductibleInputTaxAmount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "stock_type"
     */
    public function testPropertyStockType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "valuation_type"
     */
    public function testPropertyValuationType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "valuation_category"
     */
    public function testPropertyValuationCategory()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "item_is_rejected_by_supplier"
     */
    public function testPropertyItemIsRejectedBySupplier()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "purg_doc_price_date"
     */
    public function testPropertyPurgDocPriceDate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "purchasing_info_record_update_code"
     */
    public function testPropertyPurchasingInfoRecordUpdateCode()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "inventory_special_stock_type"
     */
    public function testPropertyInventorySpecialStockType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "delivery_document_type"
     */
    public function testPropertyDeliveryDocumentType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "issuing_storage_location"
     */
    public function testPropertyIssuingStorageLocation()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "allocation_table"
     */
    public function testPropertyAllocationTable()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "allocation_table_item"
     */
    public function testPropertyAllocationTableItem()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "retail_promotion"
     */
    public function testPropertyRetailPromotion()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "purg_configurable_item_number"
     */
    public function testPropertyPurgConfigurableItemNumber()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "purg_doc_aggrgd_subitem_category"
     */
    public function testPropertyPurgDocAggrgdSubitemCategory()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "purg_external_sort_number"
     */
    public function testPropertyPurgExternalSortNumber()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "batch"
     */
    public function testPropertyBatch()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "purchasing_item_is_free_of_charge"
     */
    public function testPropertyPurchasingItemIsFreeOfCharge()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "down_payment_type"
     */
    public function testPropertyDownPaymentType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "down_payment_percentage_of_tot_amt"
     */
    public function testPropertyDownPaymentPercentageOfTotAmt()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "down_payment_amount"
     */
    public function testPropertyDownPaymentAmount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "down_payment_due_date"
     */
    public function testPropertyDownPaymentDueDate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "expected_overall_limit_amount"
     */
    public function testPropertyExpectedOverallLimitAmount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "overall_limit_amount"
     */
    public function testPropertyOverallLimitAmount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "pur_contract_for_overall_limit"
     */
    public function testPropertyPurContractForOverallLimit()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "pur_contract_item_for_overall_limit"
     */
    public function testPropertyPurContractItemForOverallLimit()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "purg_prod_cmplnc_supplier_status"
     */
    public function testPropertyPurgProdCmplncSupplierStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "purg_product_marketability_status"
     */
    public function testPropertyPurgProductMarketabilityStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "purg_safety_data_sheet_status"
     */
    public function testPropertyPurgSafetyDataSheetStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "purg_prod_cmplnc_dngrs_goods_status"
     */
    public function testPropertyPurgProdCmplncDngrsGoodsStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "br_material_origin"
     */
    public function testPropertyBrMaterialOrigin()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "br_material_usage"
     */
    public function testPropertyBrMaterialUsage()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "br_cfop_category"
     */
    public function testPropertyBrCfopCategory()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "br_ncm"
     */
    public function testPropertyBrNcm()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "consumption_tax_ctrl_code"
     */
    public function testPropertyConsumptionTaxCtrlCode()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "br_is_produced_in_house"
     */
    public function testPropertyBrIsProducedInHouse()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "product_season_year"
     */
    public function testPropertyProductSeasonYear()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "product_season"
     */
    public function testPropertyProductSeason()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "product_collection"
     */
    public function testPropertyProductCollection()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "product_theme"
     */
    public function testPropertyProductTheme()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "season_completeness_status"
     */
    public function testPropertySeasonCompletenessStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "shipping_group_rule"
     */
    public function testPropertyShippingGroupRule()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "shipping_group_number"
     */
    public function testPropertyShippingGroupNumber()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "product_characteristic1"
     */
    public function testPropertyProductCharacteristic1()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "product_characteristic2"
     */
    public function testPropertyProductCharacteristic2()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "product_characteristic3"
     */
    public function testPropertyProductCharacteristic3()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "purg_doc_subitem_category"
     */
    public function testPropertyPurgDocSubitemCategory()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "diversion_status"
     */
    public function testPropertyDiversionStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "reference_document_number"
     */
    public function testPropertyReferenceDocumentNumber()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "reference_document_item"
     */
    public function testPropertyReferenceDocumentItem()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "purchase_order_reference_type"
     */
    public function testPropertyPurchaseOrderReferenceType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "item_has_value_added_service"
     */
    public function testPropertyItemHasValueAddedService()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "val_added_srvc_parent_itm_number"
     */
    public function testPropertyValAddedSrvcParentItmNumber()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "stock_segment"
     */
    public function testPropertyStockSegment()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "sap__messages"
     */
    public function testPropertySapMessages()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "_delivery_address"
     */
    public function testPropertyDeliveryAddress()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "_purchase_order"
     */
    public function testPropertyPurchaseOrder()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "_purchase_order_invoicing_plan"
     */
    public function testPropertyPurchaseOrderInvoicingPlan()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "_purchase_order_item_note"
     */
    public function testPropertyPurchaseOrderItemNote()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "_purchase_order_schedule_line_tp"
     */
    public function testPropertyPurchaseOrderScheduleLineTp()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "_pur_ord_account_assignment"
     */
    public function testPropertyPurOrdAccountAssignment()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "_pur_ord_pricing_element"
     */
    public function testPropertyPurOrdPricingElement()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}

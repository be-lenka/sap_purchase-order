<?php
/**
 * ComSapGatewaySrvdA2xApiPurchaseorder2V0001PurchaseOrderTypeUpdateTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  BeLenka\SAP\PurchaseOrder
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Purchase Order
 *
 * This service enables you to create purchase orders through an API call from a source system outside SAP S/4HANA Cloud. Furthermore, the service enables you to read, update or delete existing purchase orders from the SAP S/4HANA Cloud system. The service is based on the OData protocol.
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace BeLenka\SAP\PurchaseOrder\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * ComSapGatewaySrvdA2xApiPurchaseorder2V0001PurchaseOrderTypeUpdateTest Class Doc Comment
 *
 * @category    Class
 * @description ComSapGatewaySrvdA2xApiPurchaseorder2V0001PurchaseOrderTypeUpdate
 * @package     BeLenka\SAP\PurchaseOrder
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class ComSapGatewaySrvdA2xApiPurchaseorder2V0001PurchaseOrderTypeUpdateTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "ComSapGatewaySrvdA2xApiPurchaseorder2V0001PurchaseOrderTypeUpdate"
     */
    public function testComSapGatewaySrvdA2xApiPurchaseorder2V0001PurchaseOrderTypeUpdate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "purchase_order_type"
     */
    public function testPropertyPurchaseOrderType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "purchasing_document_process_code"
     */
    public function testPropertyPurchasingDocumentProcessCode()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "purchase_order_date"
     */
    public function testPropertyPurchaseOrderDate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "validity_start_date"
     */
    public function testPropertyValidityStartDate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "validity_end_date"
     */
    public function testPropertyValidityEndDate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "language"
     */
    public function testPropertyLanguage()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "purchasing_completeness_status"
     */
    public function testPropertyPurchasingCompletenessStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "purg_release_sequence_status"
     */
    public function testPropertyPurgReleaseSequenceStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "release_code"
     */
    public function testPropertyReleaseCode()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "purchasing_release_strategy"
     */
    public function testPropertyPurchasingReleaseStrategy()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "purg_reason_for_doc_cancellation"
     */
    public function testPropertyPurgReasonForDocCancellation()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "company_code"
     */
    public function testPropertyCompanyCode()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "purchasing_organization"
     */
    public function testPropertyPurchasingOrganization()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "purchasing_group"
     */
    public function testPropertyPurchasingGroup()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "supplier"
     */
    public function testPropertySupplier()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "supplier_address_id"
     */
    public function testPropertySupplierAddressId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "supplier_resp_sales_person_name"
     */
    public function testPropertySupplierRespSalesPersonName()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "supplier_phone_number"
     */
    public function testPropertySupplierPhoneNumber()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "supplying_supplier"
     */
    public function testPropertySupplyingSupplier()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "supplying_plant"
     */
    public function testPropertySupplyingPlant()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "invoicing_party"
     */
    public function testPropertyInvoicingParty()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "customer"
     */
    public function testPropertyCustomer()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "purchase_contract"
     */
    public function testPropertyPurchaseContract()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "supplier_quotation_external_id"
     */
    public function testPropertySupplierQuotationExternalId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "quotation_submission_date"
     */
    public function testPropertyQuotationSubmissionDate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "item_number_interval_for_sub_items"
     */
    public function testPropertyItemNumberIntervalForSubItems()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "payment_terms"
     */
    public function testPropertyPaymentTerms()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "cash_discount1_days"
     */
    public function testPropertyCashDiscount1Days()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "cash_discount2_days"
     */
    public function testPropertyCashDiscount2Days()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "net_payment_days"
     */
    public function testPropertyNetPaymentDays()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "cash_discount1_percent"
     */
    public function testPropertyCashDiscount1Percent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "cash_discount2_percent"
     */
    public function testPropertyCashDiscount2Percent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "down_payment_type"
     */
    public function testPropertyDownPaymentType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "down_payment_percentage_of_tot_amt"
     */
    public function testPropertyDownPaymentPercentageOfTotAmt()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "down_payment_amount"
     */
    public function testPropertyDownPaymentAmount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "down_payment_due_date"
     */
    public function testPropertyDownPaymentDueDate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "incoterms_classification"
     */
    public function testPropertyIncotermsClassification()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "incoterms_transfer_location"
     */
    public function testPropertyIncotermsTransferLocation()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "incoterms_version"
     */
    public function testPropertyIncotermsVersion()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "incoterms_location1"
     */
    public function testPropertyIncotermsLocation1()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "incoterms_location2"
     */
    public function testPropertyIncotermsLocation2()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_intrastat_reporting_relevant"
     */
    public function testPropertyIsIntrastatReportingRelevant()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "is_intrastat_reporting_excluded"
     */
    public function testPropertyIsIntrastatReportingExcluded()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "correspnc_external_reference"
     */
    public function testPropertyCorrespncExternalReference()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "correspnc_internal_reference"
     */
    public function testPropertyCorrespncInternalReference()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "pricing_document"
     */
    public function testPropertyPricingDocument()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "pricing_procedure"
     */
    public function testPropertyPricingProcedure()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "document_currency"
     */
    public function testPropertyDocumentCurrency()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "exchange_rate"
     */
    public function testPropertyExchangeRate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "exchange_rate_is_fixed"
     */
    public function testPropertyExchangeRateIsFixed()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "tax_return_country"
     */
    public function testPropertyTaxReturnCountry()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "vat_registration_country"
     */
    public function testPropertyVatRegistrationCountry()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "purchasing_collective_number"
     */
    public function testPropertyPurchasingCollectiveNumber()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "sap__messages"
     */
    public function testPropertySapMessages()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}

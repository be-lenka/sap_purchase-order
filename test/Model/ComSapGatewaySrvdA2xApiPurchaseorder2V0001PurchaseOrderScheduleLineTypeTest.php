<?php
/**
 * ComSapGatewaySrvdA2xApiPurchaseorder2V0001PurchaseOrderScheduleLineTypeTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  BeLenka\SAP\PurchaseOrder
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Purchase Order
 *
 * This service enables you to create purchase orders through an API call from a source system outside SAP S/4HANA Cloud. Furthermore, the service enables you to read, update or delete existing purchase orders from the SAP S/4HANA Cloud system. The service is based on the OData protocol.
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace BeLenka\SAP\PurchaseOrder\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * ComSapGatewaySrvdA2xApiPurchaseorder2V0001PurchaseOrderScheduleLineTypeTest Class Doc Comment
 *
 * @category    Class
 * @description ComSapGatewaySrvdA2xApiPurchaseorder2V0001PurchaseOrderScheduleLineType
 * @package     BeLenka\SAP\PurchaseOrder
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class ComSapGatewaySrvdA2xApiPurchaseorder2V0001PurchaseOrderScheduleLineTypeTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "ComSapGatewaySrvdA2xApiPurchaseorder2V0001PurchaseOrderScheduleLineType"
     */
    public function testComSapGatewaySrvdA2xApiPurchaseorder2V0001PurchaseOrderScheduleLineType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "purchase_order"
     */
    public function testPropertyPurchaseOrder()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "purchase_order_item"
     */
    public function testPropertyPurchaseOrderItem()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "schedule_line"
     */
    public function testPropertyScheduleLine()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "schedule_line_delivery_date"
     */
    public function testPropertyScheduleLineDeliveryDate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "sched_line_stsc_delivery_date"
     */
    public function testPropertySchedLineStscDeliveryDate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "performance_period_start_date"
     */
    public function testPropertyPerformancePeriodStartDate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "performance_period_end_date"
     */
    public function testPropertyPerformancePeriodEndDate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "schedule_line_delivery_time"
     */
    public function testPropertyScheduleLineDeliveryTime()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "batch"
     */
    public function testPropertyBatch()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "batch_by_supplier"
     */
    public function testPropertyBatchBySupplier()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "schedule_line_order_quantity"
     */
    public function testPropertyScheduleLineOrderQuantity()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "open_purchase_order_quantity"
     */
    public function testPropertyOpenPurchaseOrderQuantity()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "purchase_order_quantity_unit"
     */
    public function testPropertyPurchaseOrderQuantityUnit()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "currency"
     */
    public function testPropertyCurrency()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "purchase_requisition"
     */
    public function testPropertyPurchaseRequisition()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "purchase_requisition_item"
     */
    public function testPropertyPurchaseRequisitionItem()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "deliv_date_category"
     */
    public function testPropertyDelivDateCategory()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "schedule_line_order_date"
     */
    public function testPropertyScheduleLineOrderDate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "product_availability_date"
     */
    public function testPropertyProductAvailabilityDate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "loading_date"
     */
    public function testPropertyLoadingDate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "loading_time"
     */
    public function testPropertyLoadingTime()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "transportation_planning_date"
     */
    public function testPropertyTransportationPlanningDate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "transportation_planning_time"
     */
    public function testPropertyTransportationPlanningTime()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "goods_issue_date"
     */
    public function testPropertyGoodsIssueDate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "goods_issue_time"
     */
    public function testPropertyGoodsIssueTime()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "route_schedule"
     */
    public function testPropertyRouteSchedule()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "product_availability_time"
     */
    public function testPropertyProductAvailabilityTime()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "sap__messages"
     */
    public function testPropertySapMessages()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "_purchase_order"
     */
    public function testPropertyPurchaseOrder()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "_purchase_order_item"
     */
    public function testPropertyPurchaseOrderItem()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "_subcontracting_component"
     */
    public function testPropertySubcontractingComponent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}

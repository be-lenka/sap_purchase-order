<?php
/**
 * ComSapGatewaySrvdA2xApiPurchaseorder2V0001PurchaseOrderSupplierAddressTypeCreateTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  BeLenka\SAP\PurchaseOrder
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Purchase Order
 *
 * This service enables you to create purchase orders through an API call from a source system outside SAP S/4HANA Cloud. Furthermore, the service enables you to read, update or delete existing purchase orders from the SAP S/4HANA Cloud system. The service is based on the OData protocol.
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace BeLenka\SAP\PurchaseOrder\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * ComSapGatewaySrvdA2xApiPurchaseorder2V0001PurchaseOrderSupplierAddressTypeCreateTest Class Doc Comment
 *
 * @category    Class
 * @description ComSapGatewaySrvdA2xApiPurchaseorder2V0001PurchaseOrderSupplierAddressTypeCreate
 * @package     BeLenka\SAP\PurchaseOrder
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class ComSapGatewaySrvdA2xApiPurchaseorder2V0001PurchaseOrderSupplierAddressTypeCreateTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "ComSapGatewaySrvdA2xApiPurchaseorder2V0001PurchaseOrderSupplierAddressTypeCreate"
     */
    public function testComSapGatewaySrvdA2xApiPurchaseorder2V0001PurchaseOrderSupplierAddressTypeCreate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "supplier_address_id"
     */
    public function testPropertySupplierAddressId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "purchase_order"
     */
    public function testPropertyPurchaseOrder()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "address_id"
     */
    public function testPropertyAddressId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "address_person_id"
     */
    public function testPropertyAddressPersonId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "address_representation_code"
     */
    public function testPropertyAddressRepresentationCode()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "correspondence_language"
     */
    public function testPropertyCorrespondenceLanguage()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "prfrd_comm_medium_type"
     */
    public function testPropertyPrfrdCommMediumType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "addressee_full_name"
     */
    public function testPropertyAddresseeFullName()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "organization_name1"
     */
    public function testPropertyOrganizationName1()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "organization_name2"
     */
    public function testPropertyOrganizationName2()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "organization_name3"
     */
    public function testPropertyOrganizationName3()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "organization_name4"
     */
    public function testPropertyOrganizationName4()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "address_search_term1"
     */
    public function testPropertyAddressSearchTerm1()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "address_search_term2"
     */
    public function testPropertyAddressSearchTerm2()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "city_name"
     */
    public function testPropertyCityName()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "district_name"
     */
    public function testPropertyDistrictName()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "village_name"
     */
    public function testPropertyVillageName()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "postal_code"
     */
    public function testPropertyPostalCode()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "company_postal_code"
     */
    public function testPropertyCompanyPostalCode()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "street_name"
     */
    public function testPropertyStreetName()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "street_prefix_name1"
     */
    public function testPropertyStreetPrefixName1()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "street_prefix_name2"
     */
    public function testPropertyStreetPrefixName2()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "street_suffix_name1"
     */
    public function testPropertyStreetSuffixName1()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "street_suffix_name2"
     */
    public function testPropertyStreetSuffixName2()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "house_number"
     */
    public function testPropertyHouseNumber()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "house_number_supplement_text"
     */
    public function testPropertyHouseNumberSupplementText()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "building"
     */
    public function testPropertyBuilding()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "floor"
     */
    public function testPropertyFloor()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "room_number"
     */
    public function testPropertyRoomNumber()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "country"
     */
    public function testPropertyCountry()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "region"
     */
    public function testPropertyRegion()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "form_of_address"
     */
    public function testPropertyFormOfAddress()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "tax_jurisdiction"
     */
    public function testPropertyTaxJurisdiction()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "transport_zone"
     */
    public function testPropertyTransportZone()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "po_box"
     */
    public function testPropertyPoBox()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "po_box_is_without_number"
     */
    public function testPropertyPoBoxIsWithoutNumber()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "po_box_postal_code"
     */
    public function testPropertyPoBoxPostalCode()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "po_box_lobby_name"
     */
    public function testPropertyPoBoxLobbyName()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "po_box_deviating_city_name"
     */
    public function testPropertyPoBoxDeviatingCityName()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "po_box_deviating_region"
     */
    public function testPropertyPoBoxDeviatingRegion()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "po_box_deviating_country"
     */
    public function testPropertyPoBoxDeviatingCountry()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "care_of_name"
     */
    public function testPropertyCareOfName()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "delivery_service_type_code"
     */
    public function testPropertyDeliveryServiceTypeCode()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "delivery_service_number"
     */
    public function testPropertyDeliveryServiceNumber()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "address_time_zone"
     */
    public function testPropertyAddressTimeZone()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "email_address"
     */
    public function testPropertyEmailAddress()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "regional_structure_check_status"
     */
    public function testPropertyRegionalStructureCheckStatus()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "sap__messages"
     */
    public function testPropertySapMessages()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "_purchase_order_tp"
     */
    public function testPropertyPurchaseOrderTp()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}

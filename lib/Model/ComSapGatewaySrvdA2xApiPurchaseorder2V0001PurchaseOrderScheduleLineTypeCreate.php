<?php
/**
 * ComSapGatewaySrvdA2xApiPurchaseorder2V0001PurchaseOrderScheduleLineTypeCreate
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  BeLenka\SAP\PurchaseOrder
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Purchase Order
 *
 * This service enables you to create purchase orders through an API call from a source system outside SAP S/4HANA Cloud. Furthermore, the service enables you to read, update or delete existing purchase orders from the SAP S/4HANA Cloud system. The service is based on the OData protocol.
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace BeLenka\SAP\PurchaseOrder\Model;

use \ArrayAccess;
use \BeLenka\SAP\PurchaseOrder\ObjectSerializer;

/**
 * ComSapGatewaySrvdA2xApiPurchaseorder2V0001PurchaseOrderScheduleLineTypeCreate Class Doc Comment
 *
 * @category Class
 * @package  BeLenka\SAP\PurchaseOrder
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<string, mixed>
 */
class ComSapGatewaySrvdA2xApiPurchaseorder2V0001PurchaseOrderScheduleLineTypeCreate implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'com.sap.gateway.srvd_a2x.api_purchaseorder_2.v0001.PurchaseOrderScheduleLine_Type-create';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'purchase_order' => 'string',
        'purchase_order_item' => 'string',
        'schedule_line' => 'string',
        'schedule_line_delivery_date' => '\DateTime',
        'sched_line_stsc_delivery_date' => '\DateTime',
        'performance_period_start_date' => '\DateTime',
        'performance_period_end_date' => '\DateTime',
        'schedule_line_delivery_time' => 'string',
        'batch' => 'string',
        'batch_by_supplier' => 'string',
        'schedule_line_order_quantity' => '\BeLenka\SAP\PurchaseOrder\Model\ScheduledQuantity',
        'open_purchase_order_quantity' => '\BeLenka\SAP\PurchaseOrder\Model\ComSapGatewaySrvdA2xApiPurchaseorder2V0001PurchaseOrderScheduleLineTypeOpenPurchaseOrderQuantity',
        'currency' => 'string',
        'purchase_requisition' => 'string',
        'purchase_requisition_item' => 'string',
        'deliv_date_category' => 'string',
        'schedule_line_order_date' => '\DateTime',
        'product_availability_date' => '\DateTime',
        'loading_date' => '\DateTime',
        'loading_time' => 'string',
        'transportation_planning_date' => '\DateTime',
        'transportation_planning_time' => 'string',
        'goods_issue_date' => '\DateTime',
        'goods_issue_time' => 'string',
        'route_schedule' => 'string',
        'product_availability_time' => 'string',
        'sap__messages' => '\BeLenka\SAP\PurchaseOrder\Model\ComSapGatewaySrvdA2xApiPurchaseorder2V0001SAPMessageCreate[]',
        '_purchase_order' => '\BeLenka\SAP\PurchaseOrder\Model\ComSapGatewaySrvdA2xApiPurchaseorder2V0001PurchaseOrderTypeCreate',
        '_purchase_order_item' => '\BeLenka\SAP\PurchaseOrder\Model\ComSapGatewaySrvdA2xApiPurchaseorder2V0001PurchaseOrderItemTypeCreate',
        '_subcontracting_component' => '\BeLenka\SAP\PurchaseOrder\Model\ComSapGatewaySrvdA2xApiPurchaseorder2V0001POSubcontractingComponentTypeCreate[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'purchase_order' => null,
        'purchase_order_item' => null,
        'schedule_line' => null,
        'schedule_line_delivery_date' => 'date',
        'sched_line_stsc_delivery_date' => 'date',
        'performance_period_start_date' => 'date',
        'performance_period_end_date' => 'date',
        'schedule_line_delivery_time' => 'time',
        'batch' => null,
        'batch_by_supplier' => null,
        'schedule_line_order_quantity' => null,
        'open_purchase_order_quantity' => null,
        'currency' => null,
        'purchase_requisition' => null,
        'purchase_requisition_item' => null,
        'deliv_date_category' => null,
        'schedule_line_order_date' => 'date',
        'product_availability_date' => 'date',
        'loading_date' => 'date',
        'loading_time' => 'time',
        'transportation_planning_date' => 'date',
        'transportation_planning_time' => 'time',
        'goods_issue_date' => 'date',
        'goods_issue_time' => 'time',
        'route_schedule' => null,
        'product_availability_time' => 'time',
        'sap__messages' => null,
        '_purchase_order' => null,
        '_purchase_order_item' => null,
        '_subcontracting_component' => null
    ];

    /**
      * Array of nullable properties. Used for (de)serialization
      *
      * @var boolean[]
      */
    protected static array $openAPINullables = [
        'purchase_order' => false,
		'purchase_order_item' => false,
		'schedule_line' => false,
		'schedule_line_delivery_date' => true,
		'sched_line_stsc_delivery_date' => true,
		'performance_period_start_date' => true,
		'performance_period_end_date' => true,
		'schedule_line_delivery_time' => false,
		'batch' => false,
		'batch_by_supplier' => false,
		'schedule_line_order_quantity' => false,
		'open_purchase_order_quantity' => false,
		'currency' => false,
		'purchase_requisition' => false,
		'purchase_requisition_item' => false,
		'deliv_date_category' => false,
		'schedule_line_order_date' => true,
		'product_availability_date' => true,
		'loading_date' => true,
		'loading_time' => false,
		'transportation_planning_date' => true,
		'transportation_planning_time' => false,
		'goods_issue_date' => true,
		'goods_issue_time' => false,
		'route_schedule' => false,
		'product_availability_time' => false,
		'sap__messages' => false,
		'_purchase_order' => false,
		'_purchase_order_item' => false,
		'_subcontracting_component' => false
    ];

    /**
      * If a nullable field gets set to null, insert it here
      *
      * @var boolean[]
      */
    protected array $openAPINullablesSetToNull = [];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of nullable properties
     *
     * @return array
     */
    protected static function openAPINullables(): array
    {
        return self::$openAPINullables;
    }

    /**
     * Array of nullable field names deliberately set to null
     *
     * @return boolean[]
     */
    private function getOpenAPINullablesSetToNull(): array
    {
        return $this->openAPINullablesSetToNull;
    }

    /**
     * Setter - Array of nullable field names deliberately set to null
     *
     * @param boolean[] $openAPINullablesSetToNull
     */
    private function setOpenAPINullablesSetToNull(array $openAPINullablesSetToNull): void
    {
        $this->openAPINullablesSetToNull = $openAPINullablesSetToNull;
    }

    /**
     * Checks if a property is nullable
     *
     * @param string $property
     * @return bool
     */
    public static function isNullable(string $property): bool
    {
        return self::openAPINullables()[$property] ?? false;
    }

    /**
     * Checks if a nullable property is set to null.
     *
     * @param string $property
     * @return bool
     */
    public function isNullableSetToNull(string $property): bool
    {
        return in_array($property, $this->getOpenAPINullablesSetToNull(), true);
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'purchase_order' => 'PurchaseOrder',
        'purchase_order_item' => 'PurchaseOrderItem',
        'schedule_line' => 'ScheduleLine',
        'schedule_line_delivery_date' => 'ScheduleLineDeliveryDate',
        'sched_line_stsc_delivery_date' => 'SchedLineStscDeliveryDate',
        'performance_period_start_date' => 'PerformancePeriodStartDate',
        'performance_period_end_date' => 'PerformancePeriodEndDate',
        'schedule_line_delivery_time' => 'ScheduleLineDeliveryTime',
        'batch' => 'Batch',
        'batch_by_supplier' => 'BatchBySupplier',
        'schedule_line_order_quantity' => 'ScheduleLineOrderQuantity',
        'open_purchase_order_quantity' => 'OpenPurchaseOrderQuantity',
        'currency' => 'Currency',
        'purchase_requisition' => 'PurchaseRequisition',
        'purchase_requisition_item' => 'PurchaseRequisitionItem',
        'deliv_date_category' => 'DelivDateCategory',
        'schedule_line_order_date' => 'ScheduleLineOrderDate',
        'product_availability_date' => 'ProductAvailabilityDate',
        'loading_date' => 'LoadingDate',
        'loading_time' => 'LoadingTime',
        'transportation_planning_date' => 'TransportationPlanningDate',
        'transportation_planning_time' => 'TransportationPlanningTime',
        'goods_issue_date' => 'GoodsIssueDate',
        'goods_issue_time' => 'GoodsIssueTime',
        'route_schedule' => 'RouteSchedule',
        'product_availability_time' => 'ProductAvailabilityTime',
        'sap__messages' => 'SAP__Messages',
        '_purchase_order' => '_PurchaseOrder',
        '_purchase_order_item' => '_PurchaseOrderItem',
        '_subcontracting_component' => '_SubcontractingComponent'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'purchase_order' => 'setPurchaseOrder',
        'purchase_order_item' => 'setPurchaseOrderItem',
        'schedule_line' => 'setScheduleLine',
        'schedule_line_delivery_date' => 'setScheduleLineDeliveryDate',
        'sched_line_stsc_delivery_date' => 'setSchedLineStscDeliveryDate',
        'performance_period_start_date' => 'setPerformancePeriodStartDate',
        'performance_period_end_date' => 'setPerformancePeriodEndDate',
        'schedule_line_delivery_time' => 'setScheduleLineDeliveryTime',
        'batch' => 'setBatch',
        'batch_by_supplier' => 'setBatchBySupplier',
        'schedule_line_order_quantity' => 'setScheduleLineOrderQuantity',
        'open_purchase_order_quantity' => 'setOpenPurchaseOrderQuantity',
        'currency' => 'setCurrency',
        'purchase_requisition' => 'setPurchaseRequisition',
        'purchase_requisition_item' => 'setPurchaseRequisitionItem',
        'deliv_date_category' => 'setDelivDateCategory',
        'schedule_line_order_date' => 'setScheduleLineOrderDate',
        'product_availability_date' => 'setProductAvailabilityDate',
        'loading_date' => 'setLoadingDate',
        'loading_time' => 'setLoadingTime',
        'transportation_planning_date' => 'setTransportationPlanningDate',
        'transportation_planning_time' => 'setTransportationPlanningTime',
        'goods_issue_date' => 'setGoodsIssueDate',
        'goods_issue_time' => 'setGoodsIssueTime',
        'route_schedule' => 'setRouteSchedule',
        'product_availability_time' => 'setProductAvailabilityTime',
        'sap__messages' => 'setSapMessages',
        '_purchase_order' => 'setPurchaseOrder',
        '_purchase_order_item' => 'setPurchaseOrderItem',
        '_subcontracting_component' => 'setSubcontractingComponent'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'purchase_order' => 'getPurchaseOrder',
        'purchase_order_item' => 'getPurchaseOrderItem',
        'schedule_line' => 'getScheduleLine',
        'schedule_line_delivery_date' => 'getScheduleLineDeliveryDate',
        'sched_line_stsc_delivery_date' => 'getSchedLineStscDeliveryDate',
        'performance_period_start_date' => 'getPerformancePeriodStartDate',
        'performance_period_end_date' => 'getPerformancePeriodEndDate',
        'schedule_line_delivery_time' => 'getScheduleLineDeliveryTime',
        'batch' => 'getBatch',
        'batch_by_supplier' => 'getBatchBySupplier',
        'schedule_line_order_quantity' => 'getScheduleLineOrderQuantity',
        'open_purchase_order_quantity' => 'getOpenPurchaseOrderQuantity',
        'currency' => 'getCurrency',
        'purchase_requisition' => 'getPurchaseRequisition',
        'purchase_requisition_item' => 'getPurchaseRequisitionItem',
        'deliv_date_category' => 'getDelivDateCategory',
        'schedule_line_order_date' => 'getScheduleLineOrderDate',
        'product_availability_date' => 'getProductAvailabilityDate',
        'loading_date' => 'getLoadingDate',
        'loading_time' => 'getLoadingTime',
        'transportation_planning_date' => 'getTransportationPlanningDate',
        'transportation_planning_time' => 'getTransportationPlanningTime',
        'goods_issue_date' => 'getGoodsIssueDate',
        'goods_issue_time' => 'getGoodsIssueTime',
        'route_schedule' => 'getRouteSchedule',
        'product_availability_time' => 'getProductAvailabilityTime',
        'sap__messages' => 'getSapMessages',
        '_purchase_order' => 'getPurchaseOrder',
        '_purchase_order_item' => 'getPurchaseOrderItem',
        '_subcontracting_component' => 'getSubcontractingComponent'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->setIfExists('purchase_order', $data ?? [], null);
        $this->setIfExists('purchase_order_item', $data ?? [], null);
        $this->setIfExists('schedule_line', $data ?? [], null);
        $this->setIfExists('schedule_line_delivery_date', $data ?? [], null);
        $this->setIfExists('sched_line_stsc_delivery_date', $data ?? [], null);
        $this->setIfExists('performance_period_start_date', $data ?? [], null);
        $this->setIfExists('performance_period_end_date', $data ?? [], null);
        $this->setIfExists('schedule_line_delivery_time', $data ?? [], null);
        $this->setIfExists('batch', $data ?? [], null);
        $this->setIfExists('batch_by_supplier', $data ?? [], null);
        $this->setIfExists('schedule_line_order_quantity', $data ?? [], null);
        $this->setIfExists('open_purchase_order_quantity', $data ?? [], null);
        $this->setIfExists('currency', $data ?? [], null);
        $this->setIfExists('purchase_requisition', $data ?? [], null);
        $this->setIfExists('purchase_requisition_item', $data ?? [], null);
        $this->setIfExists('deliv_date_category', $data ?? [], null);
        $this->setIfExists('schedule_line_order_date', $data ?? [], null);
        $this->setIfExists('product_availability_date', $data ?? [], null);
        $this->setIfExists('loading_date', $data ?? [], null);
        $this->setIfExists('loading_time', $data ?? [], null);
        $this->setIfExists('transportation_planning_date', $data ?? [], null);
        $this->setIfExists('transportation_planning_time', $data ?? [], null);
        $this->setIfExists('goods_issue_date', $data ?? [], null);
        $this->setIfExists('goods_issue_time', $data ?? [], null);
        $this->setIfExists('route_schedule', $data ?? [], null);
        $this->setIfExists('product_availability_time', $data ?? [], null);
        $this->setIfExists('sap__messages', $data ?? [], null);
        $this->setIfExists('_purchase_order', $data ?? [], null);
        $this->setIfExists('_purchase_order_item', $data ?? [], null);
        $this->setIfExists('_subcontracting_component', $data ?? [], null);
    }

    /**
    * Sets $this->container[$variableName] to the given data or to the given default Value; if $variableName
    * is nullable and its value is set to null in the $fields array, then mark it as "set to null" in the
    * $this->openAPINullablesSetToNull array
    *
    * @param string $variableName
    * @param array  $fields
    * @param mixed  $defaultValue
    */
    private function setIfExists(string $variableName, array $fields, $defaultValue): void
    {
        if (self::isNullable($variableName) && array_key_exists($variableName, $fields) && is_null($fields[$variableName])) {
            $this->openAPINullablesSetToNull[] = $variableName;
        }

        $this->container[$variableName] = $fields[$variableName] ?? $defaultValue;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['purchase_order'] === null) {
            $invalidProperties[] = "'purchase_order' can't be null";
        }
        if ((mb_strlen($this->container['purchase_order']) > 10)) {
            $invalidProperties[] = "invalid value for 'purchase_order', the character length must be smaller than or equal to 10.";
        }

        if ($this->container['purchase_order_item'] === null) {
            $invalidProperties[] = "'purchase_order_item' can't be null";
        }
        if ((mb_strlen($this->container['purchase_order_item']) > 5)) {
            $invalidProperties[] = "invalid value for 'purchase_order_item', the character length must be smaller than or equal to 5.";
        }

        if ($this->container['schedule_line'] === null) {
            $invalidProperties[] = "'schedule_line' can't be null";
        }
        if ((mb_strlen($this->container['schedule_line']) > 4)) {
            $invalidProperties[] = "invalid value for 'schedule_line', the character length must be smaller than or equal to 4.";
        }

        if (!is_null($this->container['batch']) && (mb_strlen($this->container['batch']) > 10)) {
            $invalidProperties[] = "invalid value for 'batch', the character length must be smaller than or equal to 10.";
        }

        if (!is_null($this->container['batch_by_supplier']) && (mb_strlen($this->container['batch_by_supplier']) > 15)) {
            $invalidProperties[] = "invalid value for 'batch_by_supplier', the character length must be smaller than or equal to 15.";
        }

        if (!is_null($this->container['currency']) && (mb_strlen($this->container['currency']) > 3)) {
            $invalidProperties[] = "invalid value for 'currency', the character length must be smaller than or equal to 3.";
        }

        if (!is_null($this->container['purchase_requisition']) && (mb_strlen($this->container['purchase_requisition']) > 10)) {
            $invalidProperties[] = "invalid value for 'purchase_requisition', the character length must be smaller than or equal to 10.";
        }

        if (!is_null($this->container['purchase_requisition_item']) && (mb_strlen($this->container['purchase_requisition_item']) > 5)) {
            $invalidProperties[] = "invalid value for 'purchase_requisition_item', the character length must be smaller than or equal to 5.";
        }

        if (!is_null($this->container['deliv_date_category']) && (mb_strlen($this->container['deliv_date_category']) > 1)) {
            $invalidProperties[] = "invalid value for 'deliv_date_category', the character length must be smaller than or equal to 1.";
        }

        if (!is_null($this->container['route_schedule']) && (mb_strlen($this->container['route_schedule']) > 10)) {
            $invalidProperties[] = "invalid value for 'route_schedule', the character length must be smaller than or equal to 10.";
        }

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets purchase_order
     *
     * @return string
     */
    public function getPurchaseOrder()
    {
        return $this->container['purchase_order'];
    }

    /**
     * Sets purchase_order
     *
     * @param string $purchase_order Purchasing Document Number
     *
     * @return self
     */
    public function setPurchaseOrder($purchase_order)
    {
        if (is_null($purchase_order)) {
            throw new \InvalidArgumentException('non-nullable purchase_order cannot be null');
        }
        if ((mb_strlen($purchase_order) > 10)) {
            throw new \InvalidArgumentException('invalid length for $purchase_order when calling ComSapGatewaySrvdA2xApiPurchaseorder2V0001PurchaseOrderScheduleLineTypeCreate., must be smaller than or equal to 10.');
        }

        $this->container['purchase_order'] = $purchase_order;

        return $this;
    }

    /**
     * Gets purchase_order_item
     *
     * @return string
     */
    public function getPurchaseOrderItem()
    {
        return $this->container['purchase_order_item'];
    }

    /**
     * Sets purchase_order_item
     *
     * @param string $purchase_order_item Item Number of Purchasing Document
     *
     * @return self
     */
    public function setPurchaseOrderItem($purchase_order_item)
    {
        if (is_null($purchase_order_item)) {
            throw new \InvalidArgumentException('non-nullable purchase_order_item cannot be null');
        }
        if ((mb_strlen($purchase_order_item) > 5)) {
            throw new \InvalidArgumentException('invalid length for $purchase_order_item when calling ComSapGatewaySrvdA2xApiPurchaseorder2V0001PurchaseOrderScheduleLineTypeCreate., must be smaller than or equal to 5.');
        }

        $this->container['purchase_order_item'] = $purchase_order_item;

        return $this;
    }

    /**
     * Gets schedule_line
     *
     * @return string
     */
    public function getScheduleLine()
    {
        return $this->container['schedule_line'];
    }

    /**
     * Sets schedule_line
     *
     * @param string $schedule_line Delivery Schedule Line Counter
     *
     * @return self
     */
    public function setScheduleLine($schedule_line)
    {
        if (is_null($schedule_line)) {
            throw new \InvalidArgumentException('non-nullable schedule_line cannot be null');
        }
        if ((mb_strlen($schedule_line) > 4)) {
            throw new \InvalidArgumentException('invalid length for $schedule_line when calling ComSapGatewaySrvdA2xApiPurchaseorder2V0001PurchaseOrderScheduleLineTypeCreate., must be smaller than or equal to 4.');
        }

        $this->container['schedule_line'] = $schedule_line;

        return $this;
    }

    /**
     * Gets schedule_line_delivery_date
     *
     * @return \DateTime|null
     */
    public function getScheduleLineDeliveryDate()
    {
        return $this->container['schedule_line_delivery_date'];
    }

    /**
     * Sets schedule_line_delivery_date
     *
     * @param \DateTime|null $schedule_line_delivery_date Item Delivery Date
     *
     * @return self
     */
    public function setScheduleLineDeliveryDate($schedule_line_delivery_date)
    {
        if (is_null($schedule_line_delivery_date)) {
            array_push($this->openAPINullablesSetToNull, 'schedule_line_delivery_date');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('schedule_line_delivery_date', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['schedule_line_delivery_date'] = $schedule_line_delivery_date;

        return $this;
    }

    /**
     * Gets sched_line_stsc_delivery_date
     *
     * @return \DateTime|null
     */
    public function getSchedLineStscDeliveryDate()
    {
        return $this->container['sched_line_stsc_delivery_date'];
    }

    /**
     * Sets sched_line_stsc_delivery_date
     *
     * @param \DateTime|null $sched_line_stsc_delivery_date Statistics-Relevant Delivery Date
     *
     * @return self
     */
    public function setSchedLineStscDeliveryDate($sched_line_stsc_delivery_date)
    {
        if (is_null($sched_line_stsc_delivery_date)) {
            array_push($this->openAPINullablesSetToNull, 'sched_line_stsc_delivery_date');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('sched_line_stsc_delivery_date', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['sched_line_stsc_delivery_date'] = $sched_line_stsc_delivery_date;

        return $this;
    }

    /**
     * Gets performance_period_start_date
     *
     * @return \DateTime|null
     */
    public function getPerformancePeriodStartDate()
    {
        return $this->container['performance_period_start_date'];
    }

    /**
     * Sets performance_period_start_date
     *
     * @param \DateTime|null $performance_period_start_date Start Date for Period of Performance
     *
     * @return self
     */
    public function setPerformancePeriodStartDate($performance_period_start_date)
    {
        if (is_null($performance_period_start_date)) {
            array_push($this->openAPINullablesSetToNull, 'performance_period_start_date');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('performance_period_start_date', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['performance_period_start_date'] = $performance_period_start_date;

        return $this;
    }

    /**
     * Gets performance_period_end_date
     *
     * @return \DateTime|null
     */
    public function getPerformancePeriodEndDate()
    {
        return $this->container['performance_period_end_date'];
    }

    /**
     * Sets performance_period_end_date
     *
     * @param \DateTime|null $performance_period_end_date End Date for Period of Performance
     *
     * @return self
     */
    public function setPerformancePeriodEndDate($performance_period_end_date)
    {
        if (is_null($performance_period_end_date)) {
            array_push($this->openAPINullablesSetToNull, 'performance_period_end_date');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('performance_period_end_date', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['performance_period_end_date'] = $performance_period_end_date;

        return $this;
    }

    /**
     * Gets schedule_line_delivery_time
     *
     * @return string|null
     */
    public function getScheduleLineDeliveryTime()
    {
        return $this->container['schedule_line_delivery_time'];
    }

    /**
     * Sets schedule_line_delivery_time
     *
     * @param string|null $schedule_line_delivery_time Delivery Date Time-Spot
     *
     * @return self
     */
    public function setScheduleLineDeliveryTime($schedule_line_delivery_time)
    {
        if (is_null($schedule_line_delivery_time)) {
            throw new \InvalidArgumentException('non-nullable schedule_line_delivery_time cannot be null');
        }
        $this->container['schedule_line_delivery_time'] = $schedule_line_delivery_time;

        return $this;
    }

    /**
     * Gets batch
     *
     * @return string|null
     */
    public function getBatch()
    {
        return $this->container['batch'];
    }

    /**
     * Sets batch
     *
     * @param string|null $batch Batch Number
     *
     * @return self
     */
    public function setBatch($batch)
    {
        if (is_null($batch)) {
            throw new \InvalidArgumentException('non-nullable batch cannot be null');
        }
        if ((mb_strlen($batch) > 10)) {
            throw new \InvalidArgumentException('invalid length for $batch when calling ComSapGatewaySrvdA2xApiPurchaseorder2V0001PurchaseOrderScheduleLineTypeCreate., must be smaller than or equal to 10.');
        }

        $this->container['batch'] = $batch;

        return $this;
    }

    /**
     * Gets batch_by_supplier
     *
     * @return string|null
     */
    public function getBatchBySupplier()
    {
        return $this->container['batch_by_supplier'];
    }

    /**
     * Sets batch_by_supplier
     *
     * @param string|null $batch_by_supplier Supplier Batch Number
     *
     * @return self
     */
    public function setBatchBySupplier($batch_by_supplier)
    {
        if (is_null($batch_by_supplier)) {
            throw new \InvalidArgumentException('non-nullable batch_by_supplier cannot be null');
        }
        if ((mb_strlen($batch_by_supplier) > 15)) {
            throw new \InvalidArgumentException('invalid length for $batch_by_supplier when calling ComSapGatewaySrvdA2xApiPurchaseorder2V0001PurchaseOrderScheduleLineTypeCreate., must be smaller than or equal to 15.');
        }

        $this->container['batch_by_supplier'] = $batch_by_supplier;

        return $this;
    }

    /**
     * Gets schedule_line_order_quantity
     *
     * @return \BeLenka\SAP\PurchaseOrder\Model\ScheduledQuantity|null
     */
    public function getScheduleLineOrderQuantity()
    {
        return $this->container['schedule_line_order_quantity'];
    }

    /**
     * Sets schedule_line_order_quantity
     *
     * @param \BeLenka\SAP\PurchaseOrder\Model\ScheduledQuantity|null $schedule_line_order_quantity schedule_line_order_quantity
     *
     * @return self
     */
    public function setScheduleLineOrderQuantity($schedule_line_order_quantity)
    {
        if (is_null($schedule_line_order_quantity)) {
            throw new \InvalidArgumentException('non-nullable schedule_line_order_quantity cannot be null');
        }
        $this->container['schedule_line_order_quantity'] = $schedule_line_order_quantity;

        return $this;
    }

    /**
     * Gets open_purchase_order_quantity
     *
     * @return \BeLenka\SAP\PurchaseOrder\Model\ComSapGatewaySrvdA2xApiPurchaseorder2V0001PurchaseOrderScheduleLineTypeOpenPurchaseOrderQuantity|null
     */
    public function getOpenPurchaseOrderQuantity()
    {
        return $this->container['open_purchase_order_quantity'];
    }

    /**
     * Sets open_purchase_order_quantity
     *
     * @param \BeLenka\SAP\PurchaseOrder\Model\ComSapGatewaySrvdA2xApiPurchaseorder2V0001PurchaseOrderScheduleLineTypeOpenPurchaseOrderQuantity|null $open_purchase_order_quantity open_purchase_order_quantity
     *
     * @return self
     */
    public function setOpenPurchaseOrderQuantity($open_purchase_order_quantity)
    {
        if (is_null($open_purchase_order_quantity)) {
            throw new \InvalidArgumentException('non-nullable open_purchase_order_quantity cannot be null');
        }
        $this->container['open_purchase_order_quantity'] = $open_purchase_order_quantity;

        return $this;
    }

    /**
     * Gets currency
     *
     * @return string|null
     */
    public function getCurrency()
    {
        return $this->container['currency'];
    }

    /**
     * Sets currency
     *
     * @param string|null $currency Currency Key
     *
     * @return self
     */
    public function setCurrency($currency)
    {
        if (is_null($currency)) {
            throw new \InvalidArgumentException('non-nullable currency cannot be null');
        }
        if ((mb_strlen($currency) > 3)) {
            throw new \InvalidArgumentException('invalid length for $currency when calling ComSapGatewaySrvdA2xApiPurchaseorder2V0001PurchaseOrderScheduleLineTypeCreate., must be smaller than or equal to 3.');
        }

        $this->container['currency'] = $currency;

        return $this;
    }

    /**
     * Gets purchase_requisition
     *
     * @return string|null
     */
    public function getPurchaseRequisition()
    {
        return $this->container['purchase_requisition'];
    }

    /**
     * Sets purchase_requisition
     *
     * @param string|null $purchase_requisition Purchase Requisition Number
     *
     * @return self
     */
    public function setPurchaseRequisition($purchase_requisition)
    {
        if (is_null($purchase_requisition)) {
            throw new \InvalidArgumentException('non-nullable purchase_requisition cannot be null');
        }
        if ((mb_strlen($purchase_requisition) > 10)) {
            throw new \InvalidArgumentException('invalid length for $purchase_requisition when calling ComSapGatewaySrvdA2xApiPurchaseorder2V0001PurchaseOrderScheduleLineTypeCreate., must be smaller than or equal to 10.');
        }

        $this->container['purchase_requisition'] = $purchase_requisition;

        return $this;
    }

    /**
     * Gets purchase_requisition_item
     *
     * @return string|null
     */
    public function getPurchaseRequisitionItem()
    {
        return $this->container['purchase_requisition_item'];
    }

    /**
     * Sets purchase_requisition_item
     *
     * @param string|null $purchase_requisition_item Item Number of Purchase Requisition
     *
     * @return self
     */
    public function setPurchaseRequisitionItem($purchase_requisition_item)
    {
        if (is_null($purchase_requisition_item)) {
            throw new \InvalidArgumentException('non-nullable purchase_requisition_item cannot be null');
        }
        if ((mb_strlen($purchase_requisition_item) > 5)) {
            throw new \InvalidArgumentException('invalid length for $purchase_requisition_item when calling ComSapGatewaySrvdA2xApiPurchaseorder2V0001PurchaseOrderScheduleLineTypeCreate., must be smaller than or equal to 5.');
        }

        $this->container['purchase_requisition_item'] = $purchase_requisition_item;

        return $this;
    }

    /**
     * Gets deliv_date_category
     *
     * @return string|null
     */
    public function getDelivDateCategory()
    {
        return $this->container['deliv_date_category'];
    }

    /**
     * Sets deliv_date_category
     *
     * @param string|null $deliv_date_category Category of delivery date
     *
     * @return self
     */
    public function setDelivDateCategory($deliv_date_category)
    {
        if (is_null($deliv_date_category)) {
            throw new \InvalidArgumentException('non-nullable deliv_date_category cannot be null');
        }
        if ((mb_strlen($deliv_date_category) > 1)) {
            throw new \InvalidArgumentException('invalid length for $deliv_date_category when calling ComSapGatewaySrvdA2xApiPurchaseorder2V0001PurchaseOrderScheduleLineTypeCreate., must be smaller than or equal to 1.');
        }

        $this->container['deliv_date_category'] = $deliv_date_category;

        return $this;
    }

    /**
     * Gets schedule_line_order_date
     *
     * @return \DateTime|null
     */
    public function getScheduleLineOrderDate()
    {
        return $this->container['schedule_line_order_date'];
    }

    /**
     * Sets schedule_line_order_date
     *
     * @param \DateTime|null $schedule_line_order_date Order date of schedule line
     *
     * @return self
     */
    public function setScheduleLineOrderDate($schedule_line_order_date)
    {
        if (is_null($schedule_line_order_date)) {
            array_push($this->openAPINullablesSetToNull, 'schedule_line_order_date');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('schedule_line_order_date', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['schedule_line_order_date'] = $schedule_line_order_date;

        return $this;
    }

    /**
     * Gets product_availability_date
     *
     * @return \DateTime|null
     */
    public function getProductAvailabilityDate()
    {
        return $this->container['product_availability_date'];
    }

    /**
     * Sets product_availability_date
     *
     * @param \DateTime|null $product_availability_date Material Staging/Availability Date
     *
     * @return self
     */
    public function setProductAvailabilityDate($product_availability_date)
    {
        if (is_null($product_availability_date)) {
            array_push($this->openAPINullablesSetToNull, 'product_availability_date');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('product_availability_date', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['product_availability_date'] = $product_availability_date;

        return $this;
    }

    /**
     * Gets loading_date
     *
     * @return \DateTime|null
     */
    public function getLoadingDate()
    {
        return $this->container['loading_date'];
    }

    /**
     * Sets loading_date
     *
     * @param \DateTime|null $loading_date loading_date
     *
     * @return self
     */
    public function setLoadingDate($loading_date)
    {
        if (is_null($loading_date)) {
            array_push($this->openAPINullablesSetToNull, 'loading_date');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('loading_date', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['loading_date'] = $loading_date;

        return $this;
    }

    /**
     * Gets loading_time
     *
     * @return string|null
     */
    public function getLoadingTime()
    {
        return $this->container['loading_time'];
    }

    /**
     * Sets loading_time
     *
     * @param string|null $loading_time Loading Time (Local Time Relating to a Shipping Point)
     *
     * @return self
     */
    public function setLoadingTime($loading_time)
    {
        if (is_null($loading_time)) {
            throw new \InvalidArgumentException('non-nullable loading_time cannot be null');
        }
        $this->container['loading_time'] = $loading_time;

        return $this;
    }

    /**
     * Gets transportation_planning_date
     *
     * @return \DateTime|null
     */
    public function getTransportationPlanningDate()
    {
        return $this->container['transportation_planning_date'];
    }

    /**
     * Sets transportation_planning_date
     *
     * @param \DateTime|null $transportation_planning_date Transportation Planning Date
     *
     * @return self
     */
    public function setTransportationPlanningDate($transportation_planning_date)
    {
        if (is_null($transportation_planning_date)) {
            array_push($this->openAPINullablesSetToNull, 'transportation_planning_date');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('transportation_planning_date', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['transportation_planning_date'] = $transportation_planning_date;

        return $this;
    }

    /**
     * Gets transportation_planning_time
     *
     * @return string|null
     */
    public function getTransportationPlanningTime()
    {
        return $this->container['transportation_planning_time'];
    }

    /**
     * Sets transportation_planning_time
     *
     * @param string|null $transportation_planning_time Transp. Planning Time (Local, Relating to a Shipping Point)
     *
     * @return self
     */
    public function setTransportationPlanningTime($transportation_planning_time)
    {
        if (is_null($transportation_planning_time)) {
            throw new \InvalidArgumentException('non-nullable transportation_planning_time cannot be null');
        }
        $this->container['transportation_planning_time'] = $transportation_planning_time;

        return $this;
    }

    /**
     * Gets goods_issue_date
     *
     * @return \DateTime|null
     */
    public function getGoodsIssueDate()
    {
        return $this->container['goods_issue_date'];
    }

    /**
     * Sets goods_issue_date
     *
     * @param \DateTime|null $goods_issue_date goods_issue_date
     *
     * @return self
     */
    public function setGoodsIssueDate($goods_issue_date)
    {
        if (is_null($goods_issue_date)) {
            array_push($this->openAPINullablesSetToNull, 'goods_issue_date');
        } else {
            $nullablesSetToNull = $this->getOpenAPINullablesSetToNull();
            $index = array_search('goods_issue_date', $nullablesSetToNull);
            if ($index !== FALSE) {
                unset($nullablesSetToNull[$index]);
                $this->setOpenAPINullablesSetToNull($nullablesSetToNull);
            }
        }
        $this->container['goods_issue_date'] = $goods_issue_date;

        return $this;
    }

    /**
     * Gets goods_issue_time
     *
     * @return string|null
     */
    public function getGoodsIssueTime()
    {
        return $this->container['goods_issue_time'];
    }

    /**
     * Sets goods_issue_time
     *
     * @param string|null $goods_issue_time Time of Goods Issue (Local, Relating to a Plant)
     *
     * @return self
     */
    public function setGoodsIssueTime($goods_issue_time)
    {
        if (is_null($goods_issue_time)) {
            throw new \InvalidArgumentException('non-nullable goods_issue_time cannot be null');
        }
        $this->container['goods_issue_time'] = $goods_issue_time;

        return $this;
    }

    /**
     * Gets route_schedule
     *
     * @return string|null
     */
    public function getRouteSchedule()
    {
        return $this->container['route_schedule'];
    }

    /**
     * Sets route_schedule
     *
     * @param string|null $route_schedule route_schedule
     *
     * @return self
     */
    public function setRouteSchedule($route_schedule)
    {
        if (is_null($route_schedule)) {
            throw new \InvalidArgumentException('non-nullable route_schedule cannot be null');
        }
        if ((mb_strlen($route_schedule) > 10)) {
            throw new \InvalidArgumentException('invalid length for $route_schedule when calling ComSapGatewaySrvdA2xApiPurchaseorder2V0001PurchaseOrderScheduleLineTypeCreate., must be smaller than or equal to 10.');
        }

        $this->container['route_schedule'] = $route_schedule;

        return $this;
    }

    /**
     * Gets product_availability_time
     *
     * @return string|null
     */
    public function getProductAvailabilityTime()
    {
        return $this->container['product_availability_time'];
    }

    /**
     * Sets product_availability_time
     *
     * @param string|null $product_availability_time Material Staging Time (Local, Relating to a Plant)
     *
     * @return self
     */
    public function setProductAvailabilityTime($product_availability_time)
    {
        if (is_null($product_availability_time)) {
            throw new \InvalidArgumentException('non-nullable product_availability_time cannot be null');
        }
        $this->container['product_availability_time'] = $product_availability_time;

        return $this;
    }

    /**
     * Gets sap__messages
     *
     * @return \BeLenka\SAP\PurchaseOrder\Model\ComSapGatewaySrvdA2xApiPurchaseorder2V0001SAPMessageCreate[]|null
     */
    public function getSapMessages()
    {
        return $this->container['sap__messages'];
    }

    /**
     * Sets sap__messages
     *
     * @param \BeLenka\SAP\PurchaseOrder\Model\ComSapGatewaySrvdA2xApiPurchaseorder2V0001SAPMessageCreate[]|null $sap__messages sap__messages
     *
     * @return self
     */
    public function setSapMessages($sap__messages)
    {
        if (is_null($sap__messages)) {
            throw new \InvalidArgumentException('non-nullable sap__messages cannot be null');
        }
        $this->container['sap__messages'] = $sap__messages;

        return $this;
    }

    /**
     * Gets _purchase_order
     *
     * @return \BeLenka\SAP\PurchaseOrder\Model\ComSapGatewaySrvdA2xApiPurchaseorder2V0001PurchaseOrderTypeCreate|null
     */
    public function getPurchaseOrder()
    {
        return $this->container['_purchase_order'];
    }

    /**
     * Sets _purchase_order
     *
     * @param \BeLenka\SAP\PurchaseOrder\Model\ComSapGatewaySrvdA2xApiPurchaseorder2V0001PurchaseOrderTypeCreate|null $_purchase_order _purchase_order
     *
     * @return self
     */
    public function setPurchaseOrder($_purchase_order)
    {
        if (is_null($_purchase_order)) {
            throw new \InvalidArgumentException('non-nullable _purchase_order cannot be null');
        }
        $this->container['_purchase_order'] = $_purchase_order;

        return $this;
    }

    /**
     * Gets _purchase_order_item
     *
     * @return \BeLenka\SAP\PurchaseOrder\Model\ComSapGatewaySrvdA2xApiPurchaseorder2V0001PurchaseOrderItemTypeCreate|null
     */
    public function getPurchaseOrderItem()
    {
        return $this->container['_purchase_order_item'];
    }

    /**
     * Sets _purchase_order_item
     *
     * @param \BeLenka\SAP\PurchaseOrder\Model\ComSapGatewaySrvdA2xApiPurchaseorder2V0001PurchaseOrderItemTypeCreate|null $_purchase_order_item _purchase_order_item
     *
     * @return self
     */
    public function setPurchaseOrderItem($_purchase_order_item)
    {
        if (is_null($_purchase_order_item)) {
            throw new \InvalidArgumentException('non-nullable _purchase_order_item cannot be null');
        }
        $this->container['_purchase_order_item'] = $_purchase_order_item;

        return $this;
    }

    /**
     * Gets _subcontracting_component
     *
     * @return \BeLenka\SAP\PurchaseOrder\Model\ComSapGatewaySrvdA2xApiPurchaseorder2V0001POSubcontractingComponentTypeCreate[]|null
     */
    public function getSubcontractingComponent()
    {
        return $this->container['_subcontracting_component'];
    }

    /**
     * Sets _subcontracting_component
     *
     * @param \BeLenka\SAP\PurchaseOrder\Model\ComSapGatewaySrvdA2xApiPurchaseorder2V0001POSubcontractingComponentTypeCreate[]|null $_subcontracting_component _subcontracting_component
     *
     * @return self
     */
    public function setSubcontractingComponent($_subcontracting_component)
    {
        if (is_null($_subcontracting_component)) {
            throw new \InvalidArgumentException('non-nullable _subcontracting_component cannot be null');
        }
        $this->container['_subcontracting_component'] = $_subcontracting_component;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


